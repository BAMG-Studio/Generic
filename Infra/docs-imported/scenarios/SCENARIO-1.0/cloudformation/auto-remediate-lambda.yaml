AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda to auto-remediate public S3 bucket policies (opt-in)
Resources:
  AutoRemediateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3RemediatePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketPolicy
                  - s3:PutBucketPolicy
                  - s3:PutBucketAcl
                  - s3:GetBucketAcl
                Resource: '*'
  AutoRemediateFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.11
      Handler: lambda_function.handler
      Role: !GetAtt AutoRemediateRole.Arn
      Timeout: 60
      Code:
        ZipFile: |
          import json
          import boto3
          def handler(event, context):
              # Basic example: prints event and does NOT auto-remediate by default
              print('Received event:', json.dumps(event))
              # Implement removal of public principals here if enabling auto-remediation
              return {'status': 'ok'}
Outputs:
  LambdaArn:
    Value: !GetAtt AutoRemediateFunction.Arn
    Description: ARN of the remediation function
