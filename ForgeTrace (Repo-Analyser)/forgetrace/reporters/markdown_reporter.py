"""Markdown Reporter - Author: Peter"""
from pathlib import Path

class MarkdownReporter:
    def __init__(self, findings, output_dir, config):
        self.findings = findings
        self.output_dir = Path(output_dir)
        self.config = config
        
    def generate(self):
        output_file = self.output_dir / "ip_contribution_table.md"
        
        md = ["# IP Contribution Table", ""]
        md.append("**Generated by ForgeTrace (Repo-Analyser)**")
        md.append("**Author: Peter Kolawole, BAMG Studio LLC**")
        md.append("")
        
        # Summary
        cost = self.findings.get("cost_estimate", {})
        md.append("## Summary")
        md.append(f"- Total LOC: {cost.get('total_loc', 0):,}")
        md.append(f"- Foreground LOC: {cost.get('foreground_loc', 0):,}")
        md.append(f"- Estimated Rewrite Cost: ${cost.get('estimated_cost_usd', 0):,.2f}")
        md.append(f"- Estimated Days: {cost.get('estimated_days', 0)}")
        md.append("")
        
        # Classification table
        md.append("## Module Classification")
        md.append("")
        md.append("| Module | Origin | License | Rewriteable | Score | Notes |")
        md.append("|--------|--------|---------|-------------|-------|-------|")
        
        classifications = self.findings.get("classification", {})
        rewriteability = self.findings.get("rewriteability", {})
        
        for filepath, data in list(classifications.items())[:50]:  # Limit for readability
            origin = data.get("origin", "unknown")
            license_info = data.get("license", "none")
            rw = rewriteability.get(filepath, {})
            rewriteable = "Yes" if rw.get("rewriteable", False) else "No"
            score = rw.get("score", 0)
            loc = rw.get("loc", 0)
            
            md.append(f"| {Path(filepath).name} | {origin} | {license_info} | {rewriteable} | {score:.2f} | {loc} LOC |")
        
        md.append("")
        md.append("## Recommendations")
        md.append("")
        md.append("1. **Third-party components**: Verify license compliance")
        md.append("2. **Foreground code**: Assess rewriteability scores for clean-room options")
        md.append("3. **High-similarity modules**: Review for potential background IP claims")
        md.append("")
        md.append("---")
        md.append("*Not legal advice. Consult counsel.*")
        
        output_file.write_text("\n".join(md))
